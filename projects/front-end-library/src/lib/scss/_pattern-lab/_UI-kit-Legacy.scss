/* *****************************************************************************
*
*  Accordion (collapse)
*
* ***************************************************************************** */

.accordion-item {
  $accordion-item: &;

  &--hierarchy {
    #{$accordion-item}__header {
      .accordion-item-toggler[data-toggle="collapse"][aria-expanded="false"]{
        .icon-arrow-to-right{
          transform: rotate(45deg) translate(-1px,2px);
        }
      }

      .accordion-item-toggler[data-toggle="collapse"][aria-expanded="true"]{
        .icon-arrow-to-right{
          transform: rotate(135deg) translate(-2px,2px);
        }
      }
    }
  }
}
/* *****************************************************************************
*
*  List Progress bar (step by step)
*
* ***************************************************************************** */

.list-progress-step {
  display: flex;
  padding: 0;

  li {
    list-style-type: none;
    width: 100%;
    position: relative;

    &:before {
      @include size(1rem);
      content: "";
      display: block;
      background: $gray-200;
      border-radius: 50%;
      margin: 0 auto;
      position: relative;
      z-index: 10;
    }

    &:after {
      @include size(100%, .3rem);
      content: '';
      background: $gray-200;
      position: absolute;
      top: 50%;
      transform: translate(0,-50%);
    }

    &.done,
    &.active {
      &:before,
      &:after {
        background: $primary;
        color: $dark;
      }
    }

    &.active {
      &:before {
        transform: scale(2);
      }

      &:after {
        background: linear-gradient(to right, $primary 50%, $gray-200 51%);
      }
    }
  }

  &--vertical {
    flex-direction: column;

    li {
      padding: 1rem 2rem 1rem 2.5rem;
      display: flex;
      flex-direction: column;

      &.active {
        &:before {
          transform: translateX(-2.5rem) scale(2) !important;
        }
      }

      &:before {
        margin: initial;
        transform: translateX(-2.5rem);
      }

      &:after {
        width: .3rem;
        height: 100%;
        left: 0.35rem;
      }
    }
  }
}
/* *****************************************************************************
*
*  D3 svg graph
*
* ***************************************************************************** */

.svg-d3-graph {

  &__x-axis {
    .domain {
      stroke: $gray-100;
    }

    .tick {
      //line {
      //  stroke: $gray-100;
      //}
      text {
        //transform: translate(0, 0.5rem);
      }
    }

    &--lv2 {
      .domain {
        display:none;
      }

      .tick {
        line {
          stroke: $gray-600;
        }

        text {
          transform: translate(0, 0.4rem);
          // transform: translate(1.4rem, 0.5rem);
        }

        &-empty {
          line {
            stroke: $gray-100;
            //display:none;
          }
        }
      }

    }
  }

  &__y-axis {
    .tick {
      line {
        stroke: $gray-100;
      }

      text {
        transform: translate(-0.5rem, 0);
      }
    }
  }

  .tick {
    text {
      font-family: $font-family-base;
      font-size: $font-size-base;
      color: $gray-600;
    }
  }
}
/* *****************************************************************************
*
*  Table container
*
* ***************************************************************************** */

.table-container {
  &--dynamic-data {
    .form-group {
      &.is-invalid {
        & > .invalid-feedback {
          display: inline-table;
        }
      }
    }
  }

  &.table-data-edit {
    tr td:not(:first-child){
      vertical-align: middle;
    }

    td {
      input[type=text],
      input[type=email],
      .custom-select,
      .btn[data-toggle=modal] {
        min-width: 10rem;
      }
    }
  }
}
/* *****************************************************************************
*
*  FORM
*
* ***************************************************************************** */

.form-input-autocomplete {
  position: relative;

  // The input is not empty (in placeholder mode) meaning that the user has enter something
  //.form-control:focus,
  .form-control:not(:placeholder-shown) {
    & ~ .form-input-autocomplete__dropdown{
      opacity: 1;
      pointer-events: initial!important;
    }
  }
  &__dropdown{
    position: absolute;
    left: 0;
    top: auto;
    bottom: 0;
    transform: translate(0, 102%);
    z-index: 10;
    opacity: 0;
    box-shadow: $dropdown-box-shadow;
    pointer-events: none;
  }
}
