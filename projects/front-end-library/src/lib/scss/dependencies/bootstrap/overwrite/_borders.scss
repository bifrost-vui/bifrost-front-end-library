/* *****************************************************************************
*
*  Borders
*
* ***************************************************************************** */

$allBorders: (
  'border': 'border',
  'border-top': 'border-top',
  'border-bottom': 'border-bottom',
  'border-left': 'border-left',
  'border-right': 'border-right',
);
@include createClassBorders($allBorders, $theme-colors);

$allBordersGray: (
  'border': 'border-gray',
  'border-top': 'border-top-gray',
  'border-bottom': 'border-bottom-gray',
  'border-left': 'border-left-gray',
  'border-right': 'border-right-gray',
);
@include createClassBorders($allBordersGray, $grays);

.border-color--transparent {
  border-color: rgba(0, 0, 0, 0) !important;
}

// theme-colors
@each $color, $value in $theme-colors {
  .border-color--#{$color} {
    border-color: $value !important;
  }
}

@each $color, $value in $grays {
  .border-color-gray--#{$color} {
    border-color: $value !important;
  }
}

// no border
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .border#{$infix}--0 {
      border: 0;
    }
  }
}
// Legacy
.border-input {
  border: $input-border-width solid $input-border-color;
}

.border-dashed {
  border-style: dashed !important;
  border-width: 2px !important;
}

.border-radius-left-0 {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}

.border-radius-right-0 {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.border-radius-0 {
  @extend .border-radius-left-0;
  @extend .border-radius-right-0;
}
// end Legacy
