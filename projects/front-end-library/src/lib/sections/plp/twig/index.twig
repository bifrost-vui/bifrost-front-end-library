{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Default Variables (Props, Controls) - Pre Boolean Variables #}
{% set numberOfResultsSize = numberOfResultsSize|default("h3") %}
{% set numberOfResultsTag = numberOfResultsTag|default("h2") %}

{# Boolean Variables #}
{% set hasId = id is defined and id is not empty %}
{% set isNumberOfResultsSizeH2 = numberOfResultsSize is same as("h2") %}
{% set isNumberOfResultsSizeH3 = numberOfResultsSize is same as("h3") %}
{% set isNumberOfResultsSizeNormal = numberOfResultsSize is same as("normal") %}
{% set isNumberOfResultsTagDiv = numberOfResultsTag is same as("div") %}
{% set isNumberOfResultsTagH2 = numberOfResultsTag is same as("h2") %}
{% set isNumberOfResultsTagH3 = numberOfResultsTag is same as("h3") %}

{# Default Variables #}
{% set class = class|default("") %}

{# Arrays of Classes With Dynamic Elements #}
{% set plpClasses = [
  "bf-plp",
  (class),
] %}
{% set plpNumberOfResultsClasses = [
  "bf-plp__nb-results-and-button__nb-results",
  (isNumberOfResultsSizeH2 ? "h2"),
  (isNumberOfResultsSizeH3 ? "h3"),
  (isNumberOfResultsSizeNormal ? "bf-text"),
] %}

{# Chips - Selected Filters #}
{% set selectedCheckboxes = [] %}
{% for filterObj in dataFilters %}
  {% if filterObj.dataCheckboxes is defined %}
    {% for option in filterObj.dataCheckboxes.options %}
      {% if option.isChecked is same as(true) %}
        {% set selectedCheckboxes = selectedCheckboxes|merge([{
          class: "js-bf-plp-filters-chip",
          deleteButton: "removeFilter('" ~ option.id ~ "')"|raw,
          deleteButtonAriaLabel: "On a click, it will remove this filter."|t,
          id: option.id ~ "_chip",
          isDisabled: false,
          label: option.label,
        }]) %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endfor %}

{# Template #}
<div {{ macros.addAttributes({
  "class": plpClasses|join(' ')|trim,
  "id": (hasId ? id),
}) }}>

  <div class="bf-plp__nb-results-and-button js-bf-plp-nb-results-mobile-sticky">
    {# Number of products results #}
    {% embed "@bf-utils/custom-tag/twig/index.twig" with {
      customTag: titleTag,
      attr: {
        "class": plpNumberOfResultsClasses|join(' ')|trim
      },
    } %}
      {% block customTagContent %}
        {{ numberOfResults|number_format ~ " " ~ "results"|t }}
      {% endblock %}
    {% endembed %}

    {# Mobile button to open filters container #}
    <div class="bf-plp__nb-results-and-button__button">
      {% include "@bf-components/button/twig/index.twig" with {
        ariaControls: "plpFiltersContainer",
        ariaExpanded: "false",
        class: "js-bf-plp-filters-button-open",
        dataTarget: "#plpFiltersContainer",
        dataToggle: "collapse",
        hierarchy: "secondary",
        label: "Filter"|t,
        iconName: "settings",
        iconPosition: "right",
      } only %}
    </div>
  </div>

  <div id="plpFiltersContainer" class="bf-plp__filters-container collapse fade">
    <div class="bf-plp__filters-container__mobile-infos">
      <p class="h2">
        {{ "Filter"|t }}
      </p>

      {% include "@bf-components/button-icon/twig/index.twig" with {
        ariaControls: "plpFiltersContainer",
        ariaExpanded: "true",
        ariaLabel: "Close Filter Container"|t,
        class: "js-bf-plp-filters-button-close",
        dataTarget: "#plpFiltersContainer",
        dataToggle: "collapse",
        icon: "x",
      } only %}
    </div>

    {# Chips #}
    <div class="bf-plp__filters-container__chips">
      {# Chip template - Always hidden #}
      {% include "@bf-components/chip/twig/index.twig" with {
        class: "js-bf-filters-chip-template d-none",
        deleteButton: "removeFilter()",
        deleteButtonAriaLabel: "On a click, it will remove this filter."|t,
        id: "chipTempId",
        isDisabled: true,
        label: "chipTempLabel",
      } only %}

      {# Filter Chips #}
      {% include "@bf-components/chips-group/twig/index.twig" with {
          class: "bf-plp__filters-container__chips__group js-bf-plp-filters-container-chips-group",
          chipsData: selectedCheckboxes,
          id: "selectedFiltersChips",
      } only %}
    </div>

    {# Filters #}
    <div class="bf-plp__filters-container__filters">
      {% for dataFilter in dataFilters %}

        {% set filterVars = {
          class: dataFilter.class,
          id: dataFilter.id,
          idParent: id,
          isDisabled: dataFilter.isDisabled|default(false),
          isExpandedByDefault: dataFilter.isExpandedByDefault|default(true),
          numberOfCheckboxesToDisplay: dataFilter.numberOfCheckboxesToDisplay,
          title: dataFilter.title,
        } %}

        {% if dataFilter.dataCheckboxes is defined and dataFilter.dataCheckboxes is not empty %}
          {% set filterVars = filterVars|merge({dataCheckboxes: dataFilter.dataCheckboxes}) %}
        {% elseif dataFilter.dataSlider is defined and dataFilter.dataSlider is not empty %}
          {% set filterVars = filterVars|merge({dataSlider: dataFilter.dataSlider}) %}
        {% endif %}

        {% include "@bf-components/filter/twig/index.twig" with filterVars only %}
      {% endfor %}
    </div>

    {# Custom Filters #}
    {% block customFiltersBlock %}{% endblock %}
  </div>

  <div class="bf-plp__results">
    {% block resultsBlock %}{% endblock %}
  </div>

</div>
