{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Boolean Variables #}
{% set hasAriaLabel = ariaLabel is defined and ariaLabel is not empty %}
{% set hasLabel = label is defined and label is not empty %}
{% set hasName = name is defined and name is not empty %}
{% set hasValue = value is defined and value is not empty %}
{% set isChecked = isChecked|default(false) is same as(true) %}
{% set isDisabled = isDisabled|default(false) is same as(true) %}
{% set isInvalid = isInvalid|default(false) is same as(true) %}
{% set isRequired = isRequired|default(false) is same as(true) %}

{# Default Variables (Props, Controls) #}
{% set class = class|default("") %}
{% set extraAttribute = extraAttribute|default(null) %}
{% set id = id|default(inputId) %} {# inputId is Ui-Kit legacy #}
{% set labelClass = labelClass|default(null) %}
{% set labelExtraAttribute = labelExtraAttribute|default(null) %}
{% set name = name|default(inputName) %}

{# Arrays of Classes With Dynamic Elements #}
{% set containerClasses = [
  "bf-input-checkbox-option",
  (isInvalid ? "bf-input-checkbox-option--invalid"),
  (isDisabled ? "bf-input-checkbox-option--disabled"),
  (class),
] %}
{% set inputClasses = [
  "bf-input-checkbox-control",
  (isInvalid ? "bf-input-checkbox-control--invalid"),
] %}
{% set labelSecondSpanClasses = [
  "bf-text-display-sub-medium",
  (labelClass),
] %}

{# Objects of Attributes With Dynamic Elements #}
{% set inputAttributes = {
  "type": "checkbox",
  "class": (inputClasses|join(' ')|trim),
  "name": (hasName ? name),
  "id": (id),
  "value": (hasValue ? value),
  "checked": (isChecked ? "checked"),
  "disabled": (isDisabled ? "disabled"),
  "required": (isRequired ? "required"),
  "aria-label": (hasAriaLabel ? ariaLabel),
} %}
{% set labelSecondSpanAttributes = {
  "class": (labelSecondSpanClasses|join(' ')|trim),
} %}

{# Template #}
<div class="{{ containerClasses|join(' ')|trim }}">
  <input {{ macros.addAttributes(inputAttributes, extraAttribute) }} />
  {% if hasLabel %}
    <label for="{{ id }}">
      <span class="bf-checkbox__control"></span>
      <span {{ macros.addAttributes(labelSecondSpanAttributes, labelExtraAttribute) }}>
        {{ label|raw }}
      </span>
    </label>
  {% endif %}
</div>
