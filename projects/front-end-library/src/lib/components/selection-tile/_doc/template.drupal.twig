{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Default Variables (Props, Controls) #}
{% set isChecked = isChecked|json_parse %}
{% set isRequired = isRequired|json_parse %}
{% set isInvalid = isInvalid|json_parse %}
{% set isDisabled = isDisabled|json_parse %}
{% set image = image|json_parse %}
{% set iconName = iconName|json_parse %}
{% set orientation = orientation|json_parse %}
{% set footer = footer|json_parse %}
{% set extraAttribute = extraAttribute|json_parse %}
{% set reversed = reversed|json_parse %}

{# Objects of Attributes With Dynamic Elements #}
{% set containerAttributes = {
  "class": "container",
  "style": (orientation == "horizontal" ? "max-width: 600px" : "max-width: 1200px")
} %}

{# Template #}
<div {{ macros.addAttributes(containerAttributes) }}>
  {% for index in 1..3 %}

    {# In Loop : Boolean Variables #}
    {% set isIndex1 = index == 1 %}
    {% set isIndex2 = index == 2 %}
    {% set isIndex3 = index == 3 %}

    <p class="py-3">
      {% set backgroundType = {
        1: "Ground",
        2: "Reversed + Ground",
        3: "Highlight",
      } %}
      Background: {{ backgroundType[index] }}
    </p>

    {# In Loop : Arrays of Classes With Dynamic Elements #}
    {% set innerContainerClasses = {
      1: "bf-color-bg-ground",
      2: "reversed bf-color-bg-ground",
      3: "bf-color-bg-highlight",
     } %}
     {% set selectionTilesContainerClasses = [
        "d-flex gap-2",
        (orientation == "vertical" ? "flex-row flex-wrap" : "flex-column"),
      ] %}

    <div class="{{ innerContainerClasses[index] }}">
      <div class="{{ selectionTilesContainerClasses|join(' ')|trim }}">
        {% include "@bf-components/selection-tile/twig/index.twig" with {
          id: (id ~ "2" ~ loop.index)|default(id ~ "2" ~ loop.index),
          name: (name ~ loop.index)|default(name ~ loop.index),
          ariaLabel: (ariaLabel ~ "2" ~ loop.index)|default(
            ariaLabel ~ "2" ~ loop.index
          ),
          label: label|default("Selection tile label"),
          iconName: orientation == "vertical"
            ? iconName|default("bundle-1")
            : iconName|default(null)
        } %}

        {% include "@bf-components/selection-tile/twig/index.twig" with {
          id: (id ~ "3" ~ loop.index)|default(id ~ "3" ~ loop.index),
          name: (name ~ loop.index)|default(name ~ loop.index),
          ariaLabel: (ariaLabel ~ "3" ~ loop.index)|default(
            ariaLabel ~ "3" ~ loop.index
          ),
          label: label|default("Selection tile label"),
          description: description|default("lorem ipsum descriptum"),
          info: info|default("12.34 $/Month <br> for 24 months"),
          isChecked: isChecked|default(true)
        } %}

        {% include "@bf-components/selection-tile/twig/index.twig" with {
          id: (id ~ "4" ~ loop.index)|default(id ~ "4" ~ loop.index),
          name: (name ~ loop.index)|default(name ~ loop.index),
          ariaLabel: (ariaLabel ~ "4" ~ loop.index)|default(
            ariaLabel ~ "4" ~ loop.index
          ),
          label: label|default("Selection tile label"),
          description: description|default("lorem ipsum descriptum"),
          info: info|default("12.34 $/Month"),
          isChecked: isChecked|default(true),
          isDisabled: isDisabled|default(true)
        } %}

        {% include "@bf-components/selection-tile/twig/index.twig" with {
          id: (id ~ "5" ~ loop.index)|default(id ~ "5" ~ loop.index),
          name: (name ~ loop.index)|default(name ~ loop.index),
          ariaLabel: (ariaLabel ~ "5" ~ loop.index)|default(
            ariaLabel ~ "5" ~ loop.index
          ),
          label: label|default("Selection tile label"),
          description: description|default("lorem ipsum descriptum"),
          iconName: orientation == "vertical"
            ? iconName|default("bundle-1")
            : iconName|default(""),
          info: info|default("12.34 $/Month <br> for 24 months"),
          isDisabled: isDisabled|default(true)
        } %}
      </div>
    </div>
  {% endfor %}
</div>
