{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Default Variables (Props, Controls) - Pre Boolean Variables #}
{% set fit = fit|default("content") %}
{% set orientation = orientation|default("horizontal") %}

{# Boolean Variables #}
{% set hasAriaLabel = ariaLabel is defined and ariaLabel is not empty %}
{% set hasContent = content is defined and content is not empty %}
{% set hasDescription = description is defined and description is not empty %}
{% set hasFooterDescription = footer.description is defined and footer.description is not empty %}
{% set hasFooterIcon = footer.iconName is defined and footer.iconName is not empty %}
{% set hasFooterImage = footer.image is defined and footer.image is not empty %}
{% set hasFooterImageSrc = footer.image.src is defined and footer.image.src is not empty %}
{% set hasFooterLink = footer.link is defined and footer.link is not empty %}
{% set hasFooterLinkLabel = footer.link.label is defined and footer.link.label is not empty %}
{% set hasIcon = iconName is defined and iconName is not empty %}
{% set hasInfo = info is defined and info is not empty %}
{% set hasImageSrc = image.src is defined and image.src is not empty %}
{% set hasImageAlt = image.alt is defined and image.alt is not empty %}
{% set hasLabel = label is defined and label is not empty %}
{% set isBlockContentDefined = block("content") is defined %}
{% set isChecked = (isChecked ?? false) is same as(true) %}
{% set isDisabled = (isDisabled ?? false) is same as(true) %}
{% set isFitContainer = fit is same as("container") %}
{% set isFitContent = fit is same as("content") %}
{% set isInvalid = (isInvalid ?? false) is same as(true) %}
{% set isOrientationHorizontal = orientation is same as("horizontal") %}
{% set isOrientationVertical = orientation is same as("vertical") %}

{# Boolean Variables - ORDER IS IMPORTANT #}
{% set isFooterImageValid = hasFooterImage and hasFooterImageSrc %}
{% set isImageValid = hasImageSrc and hasImageAlt %}
{% set hasVisual = hasIcon or isImageValid %}
{% set hasFooter = isOrientationHorizontal and (hasFooterDescription or hasFooterLink) %}

{# Default Variables (Props, Controls) - Post Boolean Variables #}
{% set class = class|default("") %}
{% set extraAttribute = extraAttribute|default({}) %}
{% set id = id|default(inputId)|default("") %}
{% set type = type|default("checkbox") %}
{% set value = value|default("") %}

{# striptag filter #}
{% set inlineTags = "<br><em><i><strong><b><sup><sub>" %}
{% set allowedTags =
  "<div><p><ol><ul><li><span><br><em><i><strong><b><sup><sub>"
%}

{# Arrays of Classes With Dynamic Elements #}
{% set selectionTileClasses = [
  "bf-selection-tile",
  "bf-selection-tile--" ~ orientation,
  "bf-selection-tile--fit-" ~ fit,
  (isInvalid ? "bf-selection-tile--invalid"),
  (isChecked ? "checked"),
  (class),
] %}
{% set selectionTileInnerClasses = [
  "bf-selection-tile__inner",
  (isDisabled ? "disabled"),
] %}
{% set selectionTileContentClasses = [
  "bf-selection-tile__content",
  (hasVisual is same as(false) ? "bf-selection-tile__no-visual"),
] %}

{# Template #}
<div class="{{ selectionTileClasses|join(' ')|trim }}">
  <div class="{{ selectionTileInnerClasses|join(' ')|trim }}">
    <div class="bf-selection-tile__control">
      <input {{ macros.addAttributes({
        "type": type,
        "class": "bf-selection-tile__input",
        "id": id,
        "name": name,
        "value": value,
        "aria-label": (hasAriaLabel ? ariaLabel),
        "disabled": (isDisabled ? "disabled"),
        "checked": (isChecked ? "checked"),
        "required": (isRequired ? "required"),
      }, extraAttribute) }}/>
      <label {{ macros.addAttributes({
        "for": id,
        "class": "bf-selection-tile__label",
        "title": (hasAriaLabel ? ariaLabel),
      }) }}>
        <span class="bf-checkbox__control"></span>
      </label>
    </div>

    <div class="bf-selection-tile__block">
      {% if isBlockContentDefined %}
        {{ block("content") }}
      {% elseif hasContent %}
        {{ content }}
      {% else %}
        <div class="{{ selectionTileContentClasses|join(' ')|trim }}">
          <div class="bf-selection-tile__body">
            {% if hasVisual %}
              <div class="bf-selection-tile__visual">
                {% if hasIcon %}
                  {% include "@bf-components/icon/twig/index.twig" with {
                    name: iconName,
                    size: isOrientationVertical and isFitContainer ? "large" : "medium"
                  } only %}
                {% elseif isImageValid %}
                  <img {{ macros.addAttributes({
                    "class": image.class,
                    "src": image.src,
                    "alt": image.alt,
                    "loading": "lazy",
                  }) }}/>
                {% endif %}
              </div>
            {% endif %}

            {% if hasLabel or hasDescription %}
              <div class="bf-selection-tile__text">
                {% if hasLabel %}
                  <p class="p-0 m-0 text-break">
                    <strong>{{ label }}</strong>
                  </p>
                {% endif %}

                {% if hasDescription %}
                  <p class="p-0 m-0 text-break">
                    {{ description }}
                  </p>
                {% endif %}
              </div>
            {% endif %}
          </div>
        </div>

        {# ---------Vertical Tiles Bottom | Horizontal Tiles Right Side ------------ #}
        {% if hasInfo or (isOrientationVertical and isFitContainer) %}
          <div class="bf-selection-tile__bottom">
            <div class="bf-selection-tile__text">
              <p class="p-0 m-0 text-break">
                {{ info|striptags(inlineTags)|raw }}
              </p>
            </div>
          </div>
        {% endif %}
      {% endif %}
    </div>
  </div>
  {# ---------Horizontal Tiles Footer ------------ #}
  {% if hasFooter %}
    <div class="bf-selection-tile__footer p-3">
      <div class="bf-text small bf-color-neutral-secondary">
        {% if hasFooterDescription %}
          {{ footer.description|striptags(allowedTags)|raw }}
        {% endif %}

        {% if hasFooterLink and hasFooterLinkLabel %}
          {% include "@bf-components/link/twig/index.twig" with footer.link only %}
        {% endif %}
      </div>

      {% if hasFooterIcon %}
        {% include "@bf-components/icon/twig/index.twig" with {
          name: footer.iconName,
          size: "medium"
        } only %}
      {% elseif isFooterImageValid %}
        <img {{ macros.addAttributes({
          "src": footer.image.src,
          "alt": footer.image.alt,
          "loading": "lazy",
        }) }}/>
      {% endif %}
    </div>
  {% endif %}
</div>
