{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Boolean Variables #}
{% set hasAriaLabel = ariaLabel is defined and ariaLabel is not empty %}
{% set hasAriaLabelledby = ariaLabelledby is defined and ariaLabelledby is not empty %}
{% set hasLabel = label is defined and label is not empty %}
{% set isChecked = (isChecked ?? false) is same as(true) %}
{% set isDisabled = (isDisabled ?? false) is same as(true) %}
{% set isLabelIterable = hasLabel and label is iterable %}
{% set isLabelPositionRight = label.position|default("left") is same as("right") %}

{# Default Variables (Props, Controls) #}
{% set class = class|default("") %}
{% set labelText = isLabelIterable ? label.text|default("") : label|default("") %}
{% set extraAttribute = extraAttribute|default({}) %}

{# Arrays of Classes With Dynamic Elements #}
{% set switchLabelClasses = [
  "bf-input-switch",
  (isDisabled ? "disabled"),
  (class),
] %}
{% set switchLabelTextClasses = [
  "bf-text-display-sub-medium bf-input-switch__label",
  (isLabelPositionRight ? "bf-input-switch__label--right"),
  (label.class|default("")),
] %}

{# Template #}
<label class="{{ switchLabelClasses|join(' ')|trim }}">

  {# Label #}
  {% if hasLabel %}
    <span {{ macros.addAttributes({
      "class": switchLabelTextClasses|join(' ')|trim,
      "id": id ~ "_textLabel",
    }) }} >
      {{ labelText }}
    </span>
  {% endif %}

  {# Input #}
  <input {{ macros.addAttributes({
    "id": id,
    "name": name,
    "type": "checkbox",
    "checked": (isChecked ? "checked"),
    "disabled": (isDisabled ? "disabled"),
    "aria-disabled": (isDisabled ? "true"),
    "aria-label": (hasAriaLabel ? ariaLabel),
    "aria-labelledby": (hasAriaLabel is same as(false) and hasAriaLabelledby ? ariaLabelledby),
  }, extraAttribute) }} />

  {# Toggle button #}
  <span class="bf-input-switch__control"></span>
</label>
