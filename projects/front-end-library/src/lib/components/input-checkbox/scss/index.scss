/* *****************************************************************************
*
*  Input Checkbox (input with label)
*
* ***************************************************************************** */

.bf-input-checkbox {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;

    label {
        line-height: 1.5rem;
        margin: 0;

        .required:after {
            content: '*';
        }
    }
    &--isInvalid {
        label {
            color : var(--bf-color-feedback-negative);
        }
    }
}

/* *****************************************************************************
*  bf-checkbox (bf-class of the input itself)
*  can be used in another components
*  (ex: selection tile...)
* ***************************************************************************** */


.bf-checkbox {
    appearance: none;
    position: relative;
    width: 1.5rem;
    height: 1.5rem;
    margin-right: var(--bf-spacer-1);
    border: 1px solid var(--bf-color-stroke-primary);
    border-radius: .125rem;
    color: var(--bf-color-neutral-primary) ;
    background-color: var(--bf-color-bg-ground);

    &:focus-visible {
        outline: none;

        + label {
         box-shadow: var(--bf-box-shadow-highlight);
        }
    }
    &:disabled {
        border: 1px solid var(--bf-color-stroke-secondary);
        color: var(--bf-color-bg-action-disabled);
        background-color: var(--bf-color-bg-action-disabled);

        + label {
            color: rgba(var(--bf-color-neutral-secondary-rgb),.35);
        }
    }
    &:checked {
        border: 1px solid var(--bf-color-stroke-tertiary);
        background-color: var(--bf-color-feedback-neutral);

        &::before {
            display: block;
            position: absolute;
            z-index: 3;
            top: -1px;
            left: -1px;
            width: 1.5rem;
            height: 1.5rem;
            background: url('/images/icons/bifrost/check-bg.svg') center center no-repeat;
            background-size: contain;
            border-radius: inherit;
            content: '';
        }
        &:disabled {
             border-color: rgba(var(--bf-color-stroke-tertiary-rgb),.75);
             background-color: var(--bf-color-bg-action-disabled);

             &::before {
                 filter: opacity(0.3);
            }
        }
    }
    &--isInvalid {
    border-color: var(--bf-color-feedback-negative) !important;
    background-color: var(--bf-color-bg-ground);

        &:checked {
            border-color: var(--bf-color-feedback-negative);
            background-color: var(--bf-color-feedback-negative);

            &::before {
                filter: opacity(1) grayscale(100) invert(1)
            }
        }
    }
 }
.reversed .bf-checkbox {
    &:checked:disabled::before {
        filter: opacity(0.5) grayscale(100) invert(1);
    }
}
.bf-color-bg-highlight .bf-checkbox {
    &:not(.bf-checkbox--isInvalid):checked {
        background-color: var(--bf-color-bg-ground);
        border: 1px solid var(--bf-color-stroke-tertiary);

        //filter: opacity(0.5) grayscale(100) invert(1);
    }
}