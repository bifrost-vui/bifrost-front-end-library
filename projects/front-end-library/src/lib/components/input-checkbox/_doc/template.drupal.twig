{% set options = options|json_parse %}
{% set areOptionTiles = areOptionTiles|json_parse %}
{% set areOptionTilesInline = areOptionTilesInline|json_parse %}
{% set areOptionTilesLarge = areOptionTilesLarge|json_parse %}

{% set _variants = [
  {
    backgroundClass: "",
    props: {}
  },
  {
    backgroundClass: "bf-color-bg-underground",
    props: {}
  },
  {
    backgroundClass: "reversed bf-color-bg-ground",
    props: {}
  },
  {
    backgroundClass: "reversed bf-color-bg-underground",
    props: {}
  },
  {
    backgroundClass: "bf-color-bg-highlight",
    props: {}
  },
  {
    backgroundClass: "bf-color-bg-highlight",
    props: {}
  }
] %}

<div class="d-flex flex-column" style="min-height: 100vh">
  {% for _variant in _variants %}
    <div
      class="d-flex flex-column align-items-center {{
      _variant.backgroundClass
      }}"
    >
      {% set loopIndexSuffix = "--" ~ loop.index %}

      {% set _variantProps =
        _variant.props|merge({
          name: name ~ loopIndexSuffix
        })
      %}

      {% if (options|length) == 1 %}
        {% set options = [
          options[0]|merge({
            id: options[0].id ~ loopIndexSuffix
          })
        ] %}
      {% elseif (options|length) == 2 %}
        {% set options = [
          options[0]|merge({
            id: options[0].id ~ loopIndexSuffix
          }),
          options[1]|merge({
            id: options[1].id ~ loopIndexSuffix
          })
        ] %}
      {% elseif (options|length) == 3 %}
        {% set options = [
          options[0]|merge({
            id: options[0].id ~ loopIndexSuffix
          }),
          options[1]|merge({
            id: options[1].id ~ loopIndexSuffix
          }),
          options[2]|merge({
            id: options[2].id ~ loopIndexSuffix
          })
        ] %}
      {% elseif (options|length) == 4 %}
        {% set options = [
          options[0]|merge({
            id: options[0].id ~ loopIndexSuffix
          }),
          options[1]|merge({
            id: options[1].id ~ loopIndexSuffix
          }),
          options[2]|merge({
            id: options[2].id ~ loopIndexSuffix
          }),
          options[3]|merge({
            id: options[3].id ~ loopIndexSuffix
          })
        ] %}
      {% endif %}

      {% include "@bf-components/input-checkbox/twig/index.twig" with _variantProps %}
    </div>
  {% endfor %}
</div>

{# TODO: Prove that it is (easily) possible to toggle invalid state asynchronously (by usage example?). #}
