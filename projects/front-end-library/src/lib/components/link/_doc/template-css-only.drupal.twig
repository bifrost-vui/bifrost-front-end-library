{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}
{% import _self as selfMacro %}

{# Default Variables (Props, Controls) #}
{% set isUnderline = isUnderline|json_parse %}
{% set isDisabled = isDisabled|json_parse %}
{% set reversed = reversed|json_parse %}

{# Boolean Variables #}
{% set isDisabledTrue = isDisabled is same as(true) %}
{% set isDisabledDefaultTrue = isDisabled|default(true) is same as(true) %}
{% set isHierarchyPrimary = hierarchy is defined and hierarchy is same as("primary") %}
{% set isHierarchyDefaultPrimary = hierarchy|default("primary") is defined and hierarchy|default("primary") is same as("primary") %}

{% set variants = [
  {
    _name: "Ground",
    backgroundClass: "bf-color-bg-ground"
  },
  {
    _name: "Underground",
    backgroundClass: "bf-color-bg-underground"
  },
  {
    _name: "Ground + Reversed",
    backgroundClass: "bf-color-bg-ground reversed",
    reversed: true
  },
  {
    _name: "Underground + Reversed",
    backgroundClass: "bf-color-bg-underground reversed",
    reversed: true
  },
  {
    _name: "Highlight",
    backgroundClass: "bf-color-bg-highlight highlight",
    highlight: true
  },
  {
    _name: "Highlight + Reversed",
    backgroundClass: "bf-color-bg-highlight reversed highlight",
    reversed: true,
    highlight: true
  }
] %}

{# Arrays of Classes With Dynamic Elements #}
{% set linkBaseClasses = [
  "bf-link",
  (class),
] %}

{# Macros #}
{% macro hierarchyClasses(condition) %}
  {{ condition is same as(true) ? "bf-link--primary" : "bf-link--native" }}
{% endmacro %}
{% macro disabledClasses(condition) %}
  {{ condition is same as(true) ? "disabled" }}
{% endmacro %}

{# Template #}
<div class="bf-color-bg-underground p-4">
  <p class="small mb-0">
    Apply classes <strong>.bflink.bf-link--native</strong> or <strong>
      .bflink.bf-link--primary
    </strong> on <code>&lt;a&gt;</code> will display links correctly.
    <br /> But then, if needed, you still have to recreate <strong>icon</strong>
    behavior.
  </p>
</div>

<div class="template-container">
  {% for variant in variants %}

    {# In Loop : Arrays of Classes With Dynamic Elements #}
    {% set linkNativeClasses = linkBaseClasses|merge([
      (selfMacro.disabledClasses(isDisabledTrue)),
      (selfMacro.hierarchyClasses(isHierarchyPrimary)),
    ]) %}
    {% set linkNativeDisabledClasses = linkBaseClasses|merge([
      (selfMacro.disabledClasses(isDisabledDefaultTrue)),
      (selfMacro.hierarchyClasses(isHierarchyPrimary)),
    ]) %}
    {% set linkPrimaryClasses = linkBaseClasses|merge([
      (selfMacro.disabledClasses(isDisabledTrue)),
      (selfMacro.hierarchyClasses(isHierarchyDefaultPrimary)),
    ]) %}
    {% set linkPrimaryDisabledClasses = linkBaseClasses|merge([
      (selfMacro.disabledClasses(isDisabledDefaultTrue)),
      (selfMacro.hierarchyClasses(isHierarchyDefaultPrimary)),
    ]) %}

    <div class="d-flex flex-column {{ variant.backgroundClass }}">
      <h1 class="h3 p-4">{{ variant._name }}</h1>
      <div class="d-flex justify-content-center align-items-start gap-5">

        {# Native Links #}
        <div class="d-flex flex-column align-items-start">
          <p class="small flex-grow-1">Native</p>

          <a
            {{ macros.addAttributes({
              "href": "#",
              "class": linkNativeClasses|join(' ')|trim,
              "aria-disabled": (isDisabledTrue ? "true"),
              "role": (isDisabledTrue ? "link"),
            }) }}
          >
            {{ label|default("CSS only") }}
          </a>
          <a
            {{ macros.addAttributes({
              "href": "#",
              "class": linkNativeDisabledClasses|join(' ')|trim,
              "aria-disabled": (isDisabledDefaultTrue ? "true"),
              "role": (isDisabledDefaultTrue ? "link"),
            }) }}
          >
            {{ label|default("CSS only disabled") }}
          </a>
        </div>

        {# Primary Links #}
        <div class="d-flex flex-column align-items-start">
          <p class="small flex-grow-1">Primary</p>

          <a
            {{ macros.addAttributes({
              "href": "#",
              "class": linkPrimaryClasses|join(' ')|trim,
              "aria-disabled": (isDisabledTrue ? "true"),
              "role": (isDisabledTrue ? "link"),
            }) }}
          >
            {{ label|default("CSS only") }}
          </a>
          <a
            {{ macros.addAttributes({
              "href": "#",
              "class": linkPrimaryDisabledClasses|join(' ')|trim,
              "aria-disabled": (isDisabledDefaultTrue ? "true"),
              "role": (isDisabledDefaultTrue ? "link"),
            }) }}
          >
            {{ label|default("CSS only disabled") }}
          </a>
        </div>
      </div>
    </div>
  {% endfor %}
</div>

<style>
  .template-container { display: grid; grid-template-columns: repeat( auto-fit,
  minmax(400px, 1fr)); height: 100vh; }
</style>
