{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Boolean Variables #}
{% set hasAriaLabel = ariaLabel is defined and ariaLabel is not empty %}
{% set hasDataDismiss = dataDismiss is defined and dataDismiss is not empty %}
{% set hasDataTarget = dataTarget is defined and dataTarget is not empty %}
{% set hasDataToggle = dataToggle is defined and dataToggle is not empty %}
{% set hasHierarchy = hierarchy is defined and hierarchy is not empty %}
{% set hasIconName = iconName is defined and iconName is not empty %}
{% set hasIconPosition = iconPosition is defined and iconPosition is not empty %}
{% set hasLabel = label is defined and label is not empty %}
{% set hasTitle = title is defined and title is not empty %}
{% set hasRel = rel is defined and rel is not empty %}
{% set isDisabled = (isDisabled ?? false) is same as(true) %}
{% set isReversed = (reversed ?? false) is same as(true) %}
{% set isUnderline = (isUnderline ?? true) is same as(true) %}

{# Boolean Variables - ORDER IS IMPORTANT #}
{% set isHierarchyPrimary = hasHierarchy and hierarchy is same as("primary") %}
{% set isIconPositionRight = hasIconPosition and iconPosition is same as("right") %}

{# Default Variables (Props, Controls) #}
{% set class = class|default("") %}
{% set extraAttribute = extraAttribute|default({}) %}
{% set href = href|default("") %}
{% set label = label|default("") %}
{% set labelClass = labelClass|default("") %}

{# Arrays of Classes With Dynamic Elements #}
{% set linkClasses = [
  "bf-link",
  (isHierarchyPrimary ? "bf-link--primary" : "bf-link--native"),
  (isUnderline is same as(false) ? "bf-link--no-underline"),
  (hasLabel is same as(false) and hasIconName ? "bf-link--icon-only"),
  (isDisabled ? "disabled"),
  (isReversed ? "reversed"),
  (class),
] %}

{# Template #}
<a {{ macros.addAttributes({
  "href": (isDisabled is same as(false) ? href),
  "class": linkClasses|join(' ')|trim,
  "title": (hasTitle ? title),
  "rel": (hasRel ? rel),
  "role": (isDisabled ? "link"),
  "aria-disabled": (isDisabled ? "true"),
  "aria-label": (hasAriaLabel ? ariaLabel),
  "data-dismiss": (hasDataDismiss ? dataDismiss),
  "data-target": (hasDataTarget ? dataTarget),
  "data-toggle": (hasDataToggle ? dataToggle),
}, extraAttribute) }}>
  <span class="d-flex align-items-center gap-1">
    {# Icon #}
    {% if hasIconName %}
      {% include "@bf-components/icon/twig/index.twig" with {
        name: iconName,
        size: (isHierarchyPrimary ? "small" : "xsmall"),
        class: (isIconPositionRight ? "order-2")
      } only %}
    {% endif %}

    {# Label #}
    {% if hasLabel %}
      <span class="{{ labelClass }}">
        {{ label }}
      </span>
    {% endif %}
  </span>
</a>
