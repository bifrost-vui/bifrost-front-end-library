{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Default Variables (Props, Controls) - Pre Boolean Variables #}
{% set buttonSubmit = buttonSubmit|default({
  buttonIcon: {
    ariaLabel: "Search"|t,
    icon: "search",
  },
  isVisible: true,
  position: "right"
}) %}
{% set hasButtonClear = hasButtonClear|default(true) %}

{# Boolean Variables #}
{% set hasButtonClear = hasButtonClear is same as(true) %}
{% set hasInputId = input.id is defined and input.id is not empty %}
{% set hasLabel = label.text is defined and label.text is not empty %}
{% set isButtonSubmitVisible = buttonSubmit.isVisible is same as(true) %}
{% set isDisabled = isDisabled|default(false) is same as(true) %}
{% set isReversed = reversed|default(false) is same as(true) %}

{# Default Variables (Props, Controls) - Post Boolean Variables #}
{% set class = class|default("") %}
{% set input = input|default({}) %}

{# If the input is disabled, the submit button has to be disabled too #}
{% if isDisabled %}
  {% set buttonSubmit = buttonSubmit|merge({
    buttonIcon: buttonSubmit.buttonIcon|merge({
      isDisabled: isDisabled,
    }),
  }) %}
{% endif %}

{# Arrays of Classes With Dynamic Elements #}
{% set containerClasses = [
  "bf-input bf-input-search form-group",
  "w-100 form-group--search-input",
  (isReversed ? "reversed"),
  (class),
] %}
{% set inputClasses = [
  "form-control js-bf-input-search",
  (hasButtonClear ? "has-button-clear"),
  (isButtonSubmitVisible ? "has-button-submit"),
  (input.class|default("")),
] %}
{% set iconContainerClasses = [
  "form-group__input-icon-container",
  (input.iconPosition|default("")),
] %}
{% set buttonClearClasses = [
  "bf-input-search__clear-button",
  "js-bf-input-search-clear-button",
  "bf-visibility-transition",
  "d-none"
] %}

{# Template #}
<div class="{{ containerClasses|join(' ')|trim }}">
  {% if hasLabel %}
    <label {{ macros.addAttributes({
      "for": (hasInputId ? input.id),
      "class": label.class|default(""),
    }, label.extraAttribute) }}>
      {{ label.value|default("Label") }}
    </label>
  {% endif %}

  <div class="position-relative">
    <input {{ macros.addAttributes({
      "type": "text",
      "class": inputClasses|join(' ')|trim,
      "id": (hasInputId ? input.id),
      "name": input.name|default(""),
      "placeholder": input.placeholder|default(""),
      "value": input.value|default(""),
      "disabled": (isDisabled ? "disabled"),
      "autocomplete": "off",
    }, input.extraAttribute) }} />

    {% if isButtonSubmitVisible or hasButtonClear %}
      <div class="{{ iconContainerClasses|join(' ')|trim }}">
        {% block icon_container %}
          {# Import macros #}
          {% import "@bf-utils/macros/twig/index.twig" as macros %}

          {% if hasButtonClear %}
            {% include "@bf-components/button-icon/twig/index.twig" with {
              class: buttonClearClasses|join(' ')|trim,
              icon: "x",
              isDisabled: isDisabled,
            } only %}
          {% endif %}

          {% if isButtonSubmitVisible %}
            {% include "@bf-components/button-icon/twig/index.twig" with buttonSubmit.buttonIcon only %}
          {% endif %}
        {% endblock %}
      </div>
    {% endif %}
  </div>
</div>
