{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Boolean Variables #}
{% set hasInputId = input.id is defined and input.id is not empty %}
{% set hasLabel = label.value is defined and label.value is not empty %}
{% set isReversed = (reversed ?? false) is same as(true) %}
{% set isDisabled = (isDisabled ?? false) is same as(true) %}

{# Default Variables (Props, Controls) #}
{% set class = class|default("") %}
{% set mtValue = mtValue|default("0") %}
{% set invalidMsg = invalidMsg|default("This is an invalid error message") %}

{# Arrays of Classes With Dynamic Elements #}
{% set containerClasses = [
  "bf-input bf-input-search form-group",
  (isReversed ? "reversed"),
  (class),
] %}
{% set inputClasses = [
  "form-control",
  "mt-" ~ mtValue,
  (input.class|default("")),
] %}
{% set iconContainerClasses = [
  "form-group__input-icon-container rounded",
  (input.iconPosition|default("")),
] %}

{# Template #}
<div class="{{ containerClasses|join(' ')|trim }}">
  {% if hasLabel %}
    <label {{ macros.addAttributes({
      "for": (hasInputId ? input.id),
      "class": label.class|default(""),
    }, label.extraAttribute) }}>
      {{ label.value|default("Label") }}
    </label>
  {% endif %}

  <div class="position-relative">
    <input {{ macros.addAttributes({
      "type": input.type|default("text"),
      "id": (hasInputId ? input.id),
      "class": inputClasses|join(' ')|trim,
      "disabled": (isDisabled ? "disabled"),
      "placeholder": input.placeholder|default(""),
      "name": input.name|default(""),
      "value": input.value|default(""),
    }, input.extraAttribute) }} />

    <div class="{{ iconContainerClasses|join(' ')|trim }}">
      {% block icon_container %}
        {% include "@bf-components/input-search/twig/button-tooltip.twig" with {
          buttonClass: "p-0"
        } %}
      {% endblock %}
    </div>

    {# <div class="icon--error d-none">
            {% include "@bf-components/icon/twig/index.twig" with {
                name    : "svg-error",
                color   : "negative"
            } only %}
        </div> #}
  </div>

  <div class="invalid-feedback">
    {{ invalidMsg }}
  </div>
</div>
