{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Default Variables (Props, Controls) #}
{% set isDisabled = isDisabled|json_parse %}
{% set isLoading = isLoading|json_parse %}
{% set fullWidth = fullWidth|json_parse %}

{% set hierarchyList = hierarchy is defined
  ? [hierarchy]
  : ["primary", "primary-alt", "secondary", "tertiary"]
%}
{% set backgrounds = [
  "bf-color-bg-ground",
  "bf-color-bg-underground",
  "reversed bf-color-bg-ground",
  "reversed bf-color-bg-underground",
  "bf-color-bg-highlight"
] %}

<div class="d-flex flex-column">
  <div class="bf-color-bg-underground p-4">
    <p class="small mb-0">
      Apply <strong>.bf-button.bf-button--primary</strong> class on <strong>
        button
      </strong>, <strong>input</strong> or
      <strong>a</strong> will display the button correctly. But then, if needed,
      you still have to recreate <strong>loading</strong> and <strong>
        icon
      </strong> behavior.
    </p>
  </div>
  {% for _background in backgrounds %}

    {# In Loop : Arrays of Classes With Dynamic Elements #}
    {% set variantContainerClasses = [
      "d-flex flex-column justify-content-center flex-grow-1 minh-100 p-4",
      (_background),
    ] %}

    <div class="{{ variantContainerClasses|join(' ')|trim }}">
      {% for _hierarchy in hierarchyList %}

        {# In Loop : Arrays of Classes With Dynamic Elements #}
        {% set button_classes = [
          "bf-button",
          "bf-button--" ~ _hierarchy|default("secondary"),
          (reversed is same as(true) ? "reversed"),
          (fullWidth is same as(true) ? "bf-button--fullwidth"),
          (isDisabled is same as(true) ? "disabled"),
          (class|default("")),
        ] %}

        {# In Loop : Arrays of Attributes #}
        {% set button_attributes = {
          "class": button_classes|join(' ')|trim,
          "disabled": (isDisabled is same as(true) ? "disabled"),
        } %}

        <div class="row">
          <div class="flex-grow-1">
            <button {{ macros.addAttributes(button_attributes) }}>
              Button
            </button>
          </div>

          <div class="flex-grow-1">
            <input
              type="button"
              value="Input"
              {{ macros.addAttributes(button_attributes) }}
            />
          </div>

          <div class="flex-grow-1">
            <a
              href="#"
              role="button"
              {{ macros.addAttributes(button_attributes) }}
            >
              Link
            </a>
          </div>
        </div>
      {% endfor %}
    </div>
  {% endfor %}
</div>

{% if isLoading|json_parse|default(false) %}
  <script>
    function setLoading() {
    document.getElementsByClassName(".bf-button")[0].classList.add("loading"); }

    setLoading();
  </script>
{% endif %}
