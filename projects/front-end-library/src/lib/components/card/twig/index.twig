{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Boolean Variables #}
{% set hasBadge = badge is defined and badge is not empty %}
{% set hasBadgeCustomBgColor = badgeCustomBgColor is defined and badgeCustomBgColor is not empty %}
{% set hasBadgeCustomFontColor = badgeCustomFontColor is defined and badgeCustomFontColor is not empty %}
{% set hasButtons = buttons is defined and buttons is not empty %}
{% set hasComboLabel = comboLabel is defined and comboLabel is not empty %}
{% set hasContentBadges = contentBadges is defined and contentBadges is not empty %}
{% set hasContentLists = contentLists is defined and contentLists is not empty %}
{% set hasDescription = description_html is defined and description_html is not empty %}
{% set hasDetailsColors = detailsColors is defined and detailsColors is not empty %}
{% set hasDetailsStorage = detailsStorage is defined and detailsStorage is not empty %}
{% set hasHeaderCustomBgColor = headerCustomBgColor is defined and headerCustomBgColor is not empty %}
{% set hasHeaderCustomFontColor = headerCustomFontColor is defined and headerCustomFontColor is not empty %}
{% set hasIcon = iconName is defined and iconName is not empty %}
{% set hasId = id is defined and id is not empty %}
{% set hasImage = image.src is defined and image.src is not empty %}
{% set hasInputIncrement = inputIncrement is defined and inputIncrement is not empty %}
{% set hasImageBadgeIconName = image.badgeIconName is defined and image.badgeIconName is not empty %}
{% set hasLink = link.href is defined and link.href is not empty %}
{% set hasMessage = message is defined and message is not empty %}
{% set hasMessageLink = messageLink is defined and messageLink is not empty %}
{% set hasNote = note is defined and note is not empty %}
{% set hasPrice = price is defined and price is not empty %}
{% set hasPromotionBadges = promotionBadges is defined and promotionBadges is not empty %}
{% set hasSubtitle = subtitle is defined and subtitle is not empty %}
{% set hasTitle = title is defined and title is not empty %}
{% set hasTitleCategory = title.category is defined and title.category is not empty %}
{% set hasTitleDetail = title.detail is defined and title.detail is not empty %}
{% set hasUpperTitle = upperTitle is defined and upperTitle is not empty %}
{% set hasVisualBackgroundColor = visualBackgroundColor is defined and visualBackgroundColor is not empty %}
{% set isBlockButtonsDefined = block("buttons") is defined %}
{% set isDisabled = (isDisabled ?? false) is same as(true) %}

{# Boolean Variables - ORDER IS IMPORTANT #}
{% set hasVisual = hasImage or hasIcon %}
{% set hasVisualCombo = hasVisual and hasComboLabel %}

{# Default Variables #}
{% set class = class|default("") %}
{% set language = language|default("en") %}
{% set titleTag = titleTag|default("h1") %}

{# Local variables #}
{% set idAsSuffix = (hasId ? "_" ~ id : "") %}

{# Arrays of Classes With Dynamic Elements #}
{% set cardClasses = [
  "bf-card d-flex flex-column",
  (hasVisual ? "bf-card--has-visual"),
  (isDisabled ? "disabled"),
  (class),
] %}
{% set cardVisualClasses = [
  "bf-card__visual",
  (hasVisualCombo ? "bf-card__visual--combo"),
  "d-flex justify-content-center align-items-center p-3 p-sm-4",
] %}
{% set messageLinkClasses = [
  "bf-link",
  (messageLink.class|default("")),
] %}

{# Arrays of Styles With Dynamic Elements #}
{# TODO: Create a macro for a better custom style management #}
{% set cardStyles = [
  (hasBadgeCustomBgColor ? '--bf-card-badge-icon-bg-color: ' ~ badgeCustomBgColor ~ ';'),
  (hasBadgeCustomFontColor ? '--bf-card-badge-icon-font-color: ' ~ badgeCustomFontColor ~ ';'),
  (hasHeaderCustomBgColor ? '--bf-card-header-bg-color: ' ~ headerCustomBgColor ~ ';'),
  (hasHeaderCustomFontColor ? '--bf-card-header-font-color: ' ~ headerCustomFontColor ~ ';'),
] %}
{% set cardVisualStyles = [
  (hasVisualBackgroundColor ? "background-color: " ~ visualBackgroundColor ~ ";"),
] %}

{# Template #}
<article {{ macros.addAttributes({
  "class": cardClasses|join(' ')|trim,
  "id": (hasId ? id),
  "style": cardStyles|join(' ')|trim,
}) }}>

  {# Image #}
  {% if hasVisual %}
    <div {{ macros.addAttributes({
      "class": cardVisualClasses|join(' ')|trim,
      "style": cardVisualStyles|join(' ')|trim,
    }) }}>
      {% if hasImage %}
        <img {{ macros.addAttributes({
          "src": image.src|default(""),
          "data-src": image.src|default(""),
          "alt": image.alt|default(""),
          "class": (hasVisualCombo is same as(false) ? "mw-100"),
          "loading": "lazy",
        }) }}/>
        {% if hasImageBadgeIconName %}
          <div class="bf-badge-icon z-index-1">
            {% include "@bf-components/icon/twig/index.twig" with {
              name: image.badgeIconName,
              size: "medium"
            } only %}
          </div>
        {% endif %}
      {% elseif hasIcon %}
        {% include "@bf-components/icon/twig/index.twig" with {
          name: iconName,
          size: "large",
          class: (hasVisualCombo ? "combo")
        } only %}
      {% endif %}

      {% if hasVisualCombo %}
        {% include "@bf-components/icon/twig/index.twig" with {
          name: "plus",
          size: "small"
        } only %}

        <div class="text-center align-self-end d-flex flex-column pl-1 text-center pt-2">
          {% include "@bf-components/icon/twig/index.twig" with {
            name: "card-sim",
            size: "large",
            class: "align-self-center"
          } only %}

          <span class="bf-card__visual__label mt-0">
            {{ comboLabel }}
          </span>
        </div>
      {% endif %}
    </div>
  {% endif %}

  {# Header #}
  <header class="bf-card__header px-3 py-4 p-sm-4">
    {% if hasUpperTitle %}
      <p class="mb-1">
        {{ upperTitle }}
      </p>
    {% endif %}

    {% if hasTitle %}
      {% embed "@bf-utils/custom-tag/twig/index.twig" with {
        customTag: titleTag,
        attr: {
          "class": "h3 mt-0 mb-1"
        },
      } %}
        {% block customTagContent %}
          {% if hasTitleCategory and hasTitleDetail %}
            <span class="d-block font-weight-light">
              {{ title.category }}
            </span>
            {{ title.detail }}
          {% else %}
            {{ title }}
          {% endif %}
        {% endblock %}
      {% endembed %}
    {% endif %}

    {% if hasSubtitle %}
      <p class="h5 my-1">
        {{ subtitle }}
      </p>
    {% endif %}

    {% if hasDescription %}
      <div class="bf-card__description">
        {{ description_html|raw }}
      </div>
    {% endif %}

    {% if hasLink %}
      <a {{ macros.addAttributes({
        "href": link.href|default(""),
        "class": ["bf-link", link.class|default("")]|join(' ')|trim,
      }) }}>
        {{ link.label|default("") }}
      </a>
    {% endif %}

    {% if hasBadge %}
      {% if badge is not iterable %}
        {% set badge = {
          label: badge
        } %}
      {% endif %}

      {% set badge = badge|merge({
          angle: badge.angle|default("left"),
          class: ["bf-card__badge", badge.class|default("")]|join(' ')|trim,
          hierarchy: badge.hierarchy|default("primary"),
        })
      %}

      {% if hasBadgeCustomBgColor %}
        {% set badge = badge|merge({
            customBgColor: badgeCustomBgColor
          })
        %}
      {% endif %}

      {% if hasBadgeCustomFontColor %}
        {% set badge = badge|merge({
            customFontColor: badgeCustomFontColor
          })
        %}
      {% endif %}

      {% include "@bf-components/badge/twig/index.twig" with badge only %}
    {% endif %}
  </header>

  {# Body #}
  <div class="bf-card__body flex-grow-1">
    {% block card_body %}
      {% if hasContentLists %}
        {% for list in contentLists %}
          <div class="bf-card__content-list pt-3 mx-3 mx-sm-4">
            {% if list.title is defined %}
              <div class="d-flex mb-2">
                <p class="w-60 bf-text font-weight-bold mb-0">
                  {{ list.title }}
                </p>
                <p class="w-40 text-right mb-0">
                  {{ list.description }}
                </p>
              </div>
            {% endif %}

            <ul class="p-0 m-0">
              {% for content in list.content %}
                <li class="d-flex flex-row mb-2">
                  {% include "@bf-components/icon/twig/index.twig" with {
                    name: content.icon,
                    size: small,
                    class: "mr-2"
                  } only %}
                  <p class="mb-0">
                    {{ content.label }}
                  </p>
                </li>
              {% endfor %}
            </ul>

            {% if list.channels is not empty %}
              <div class="bf-card__channels">
                {% if list.channels.limited is not empty %}
                  {% include "@bf-components/channels/twig/index.twig" with {
                    channelsData: list.channels.limited,
                    class: "mt-2",
                    size: "small",
                  } only %}
                {% endif %}

                {% if list.channels.full is not empty %}
                  {% set tabsNavItems = [] %}
                  {% for channelsFull in list.channels.full %}
                    {% set tabsNavItems = tabsNavItems|merge([channelsFull.tabData]) %}
                  {% endfor %}

                  <div class="mt-2">
                    {% include "@bf-components/link/twig/index.twig" with {
                        dataTarget: "#channelsListModal" ~ idAsSuffix,
                        dataToggle: "modal",
                        href: "#channelsListModal" ~ idAsSuffix,
                        label: "See Channels"|t,
                    } only %}
                  </div>
                  {% embed "@bf-components/modal/twig/index.twig" with {
                      class: "bf-card__channels__modal pr-3 pr-md-0",
                      id: "channelsListModal" ~ idAsSuffix,
                  } %}
                    {% block modal_header %}
                      <div class="w-100 text-left">
                        <p class="modal-title">
                          {{ "List of channels"|t }}
                        </p>
                      </div>
                      {% include "@bf-components/tab/twig/real-tab.twig" with {
                        navItems: tabsNavItems,
                        itemClass: "bf-font-size-5 font-weight-normal",
                      } only %}
                    {% endblock %}

                    {% block modal_body_scroll_container %}

                      {# Import macros #}
                      {% import "@bf-utils/macros/twig/index.twig" as macros %}

                      <div class="bf-tab-content tab-content">
                        {% for channelsFull in list.channels.full %}
                          {% set tabContentClasses = [
                            "tab-pane fade",
                            (channelsFull.tabContent.class),
                          ] %}

                          <div {{ macros.addAttributes({
                            "aria-labelledby": channelsFull.tabContent.ariaLabelledby,
                            "class": tabContentClasses|join(' ')|trim,
                            "id": channelsFull.tabContent.id,
                            "role": "tabpanel",
                          }) }}>
                            <div class="mt-2">
                              {{ channelsFull.tabContent.description|raw }}
                            </div>
                            {% include "@bf-components/channels/twig/index.twig" with {
                              channelsData: channelsFull.tabContent.channelsList,
                              size: "large",
                            } only %}
                          </div>
                        {% endfor %}
                      </div>
                    {% endblock %}
                  {% endembed %}
                {% endif %}
              </div>
            {% endif %}
          </div>
        {% endfor %}
      {% endif %}

      {% if hasDetailsColors or hasDetailsStorage %}
        <div class="d-flex mx-3 mx-sm-4">
          {% if hasDetailsColors %}
            <ul class="bf-card__details-colors list-unstyled d-flex mb-0 mr-2">
              {% for color in detailsColors|default([]) %}
                <li {{ macros.addAttributes({
                  "style": "background-color: #" ~ color.value,
                  "title": "Color " ~ color.name,
                }) }}>
                  <span class="sr-only">
                    Color {{ color.name }}
                  </span>
                </li>
              {% endfor %}
            </ul>
          {% endif %}

          {% if hasDetailsStorage %}
            <p class="small mb-0">
              {% for stockage in detailsStorage|default([]) %}
                <span class="font-weight-bold">
                  {{ stockage }}
                </span>
                {% if loop.last is same as(false) %}/{% endif %}
              {% endfor %}
            </p>
          {% endif %}
        </div>
      {% endif %}

      {% if hasContentBadges %}
        <div class="bf-card__content-badge mt-3 mx-3 mx-sm-4">
          {% for contentBadge in contentBadges %}
            {% set contentBadge =
              contentBadge|merge({
                hierarchy: "tertiary"
              })
            %}
            {% include "@bf-components/badge/twig/index.twig" with contentBadge only %}
          {% endfor %}
        </div>
      {% endif %}

      {% if hasPromotionBadges %}
        <div class="bf-card__content-badge bf-card__content-badge--promotion mt-3 mx-3 mx-sm-4">
          {% for promotionBadge in promotionBadges %}
            {% include "@bf-components/badge/twig/index.twig" with {
              label: promotionBadge.label,
              iconName: promotionBadge.iconName,
              hierarchy: "tertiary-ground",
              isRounded: true
            } only %}
          {% endfor %}
        </div>
      {% endif %}
    {% endblock %}
  </div>

  {# Footer #}
  <footer class="bf-card__footer pt-0 mx-3 mx-sm-4 mb-3 mb-sm-4 mt-3">
    {% if hasPrice %}
      {% set price =
        price|merge({
          class: "w-100 " ~ price.class,
          language: price.language|default(language)
        })
      %}
      {% include "@bf-components/price/twig/index.twig" with price only %}
    {% endif %}

    {% if hasNote %}
      <div class="small bf-color-neutral-secondary mb-0">
        {{ note|raw }}
      </div>
    {% endif %}

    {% if hasInputIncrement %}
      <div class="bf-card__controls">
        {% include "@bf-components/input-increment/twig/index.twig" with inputIncrement only %}
      </div>
    {% endif %}

    {% if isBlockButtonsDefined or hasButtons %}
      <div class="bf-card__controls">
        {% if isBlockButtonsDefined %}
          {{ block("buttons") }}
        {% else %}
          {% for button in buttons %}
            {% set button =
              button|merge({
                class: "w-100 " ~ button.class
              })
            %}
            {% include "@bf-components/button/twig/index.twig" with button only %}
          {% endfor %}
        {% endif %}
      </div>
    {% endif %}

    {% if hasMessage or hasMessageLink %}
      <div class="bf-card__message d-flex">
        {% include "@bf-components/icon/twig/index.twig" with {
          name: "information-circle-filled",
          size: "small",
          class: "mr-2"
        } only %}
        <p class="mb-0">
          {{ message }}
          {% if hasMessageLink %}
            <a {{ macros.addAttributes({
              "href": messageLink.href|default("#"),
              "class": messageLinkClasses|join(' ')|trim,
            }) }}>
              {{ messageLink.label|default("") }}
            </a>
          {% endif %}
        </p>
      </div>
    {% endif %}
  </footer>
</article>
