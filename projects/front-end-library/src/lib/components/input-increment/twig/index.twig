{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Boolean Variables #}
{% set hasAriaLabel = ariaLabel is defined and ariaLabel is not empty %}
{% set hasErrorMessage = errorMessage is defined and errorMessage is not empty %}
{% set hasMin = min is defined and min is not same as("NaN") %}
{% set hasMax = max is defined and max is not same as("NaN") %}
{% set isDisabled = isDisabled|default(false) is same as(true) %}
{% set isInvalid = isInvalid|default(false) is same as(true) %}
{% set isReadOnly = isReadOnly|default(false) is same as(true) %}
{% set isRequired = isRequired is not defined ? true : isRequired %}

{# Default Variables #}
{% set class = class|default("") %}
{% set value = value|default(0) %}

{# Arrays of Classes With Dynamic Elements #}
{% set containerClasses = [
  "bf-input-increment js-bf-input-increment flex-wrap",
  (isInvalid ? "is-invalid"),
  (isDisabled ? "disabled"),
  (class),
] %}
{% set buttonDefaultClasses = [
  (isReadOnly ? "d-none" : "bf-button rounded-circle px-2"),
] %}
{% set buttonMinusClasses = [
  (isReadOnly is same as(false) ? "js-bf-input-increment__minus"),
] %}
{% set buttonPlusClasses = [
  (isReadOnly is same as(false) ? "js-bf-input-increment__plus"),
] %}
{% set inputClasses = [
  "bf-text-display-small bf-input-increment__input js-bf-input-increment__input",
  "text-center border-0",
  (isDisabled ? "disabled"),
] %}

{# Template #}
<div class="{{ containerClasses|join(' ')|trim }}">

  {# Minus button #}
  {% include "@bf-components/button/twig/index.twig" with {
    label: "",
    hierarchy: "secondary",
    iconName: "minus",
    class: buttonDefaultClasses|merge(buttonMinusClasses)|join(' ')|trim,
    ariaControls: inputId
  } only %}

  {# Input #}
  <input {{ macros.addAttributes({
    "id": inputId,
    "type": "number",
    "class": inputClasses|join(' ')|trim,
    "aria-label": (hasAriaLabel ? ariaLabel),
    "value": value,
    "size": 3,
    "min": (hasMin ? min),
    "max": (hasMax ? max),
    "readonly": (isReadOnly ? "readonly"),
    "disabled": (isDisabled ? "disabled"),
    "required": (isRequired ? "required"),
    "aria-required": (isRequired ? "true"),
  }) }}/>

  {# Plus button #}
  {% include "@bf-components/button/twig/index.twig" with {
    label: "",
    hierarchy: "secondary",
    iconName: "plus",
    class: buttonDefaultClasses|merge(buttonPlusClasses)|join(' ')|trim,
    ariaControls: inputId
  } only %}

  {# Error message #}
  {% if hasErrorMessage %}
    <div class="bf-input-increment__feedback">
      <p class="mb-2">
        {{ errorMessage }}
      </p>
    </div>
  {% endif %}
</div>
