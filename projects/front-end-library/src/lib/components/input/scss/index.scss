/* *****************************************************************************
*
*  Input
*
* ***************************************************************************** */

.bf-input {
  &__label {
    font-weight: $font-weight-bold;
    margin-bottom: 0;
  }

  &__label ~ .bf-button-icon {
    transform: translateY(2px);
  }

  &__control {
    width: 100%;
    padding: calc(0.5rem - 1px) 1rem; // In order to have height: 40px.
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    font-weight: $font-weight-normal;
    text-transform: none;
    letter-spacing: normal;
    color: var(--bf-color-neutral-primary);
    border-radius: var(--bf-border-radius-small);
    border: 1px solid var(--bf-color-stroke-primary);
    transition-property: border-color, background-color, box-shadow;
    transition-duration: 0.25s;
    transition-timing-function: ease-in-out;

    &:not(:disabled) {
      &:hover,
      &:focus {
        border-color: var(--bf-color-stroke-highlight);
        background-color: transparent;
      }

      &:focus {
        box-shadow: var(--bf-box-shadow-focus-visible) !important;
        background-color: var(--bf-color-bg-ground);
      }

      &:focus:not(:focus-visible) {
        box-shadow: none !important;
      }
    }
  }

  &--invalid .bf-input__control {
    color: currentColor;
    border-color: var(--bf-color-feedback-negative);
    background-color: transparent;
  }

  &--disabled {
    .bf-input__control {
      color: var(--bf-color-neutral-tertiary);
      border-color: var(--bf-color-stroke-secondary);
      cursor: not-allowed;
    }

    .bf-input__adornment {
      color: var(--bf-color-neutral-tertiary);

      .bf-icon {
        color: currentColor;
      }
    }
  }

  &--readonly .bf-input__control {
    border-color: var(--bf-color-stroke-secondary);
    color: var(--bf-color-neutral-secondary);
    cursor: default;
  }

  &__adornment {
    position: absolute;
    top: 0;
    right: 0;
    display: flex;
    align-items: center;
    height: 100%;
    border-radius: var(--bf-border-radius-small);
    padding-right: var(--bf-spacer-3);
    background-color: inherit;
    // pointer-events: none;
  }

  input {
    background: none;
  }

  select {
    appearance: none;
    background: none;
    cursor: pointer;

    &:disabled {
      opacity: 1; // Reset browser behavior
    }
  }

  // Override UI-Kit
  legend {
    display: inherit;
    width: inherit;
    max-width: inherit;
    padding: inherit;
    font-size: inherit;
    line-height: inherit;
    color: inherit;
    white-space: normal;
  }

  &.form-group.is-invalid {
    label {
      color: currentColor;
    }
    .form-control {
      color: currentColor;
      border-color: var(--bf-color-feedback-negative);
      background-color: transparent;
    }
  }

  .form-control {
    border-radius: var(--bf-border-radius-small);
    border: 1px solid var(--bf-color-stroke-secondary);

    &:hover,
    &:focus {
      border-color: var(--bf-color-stroke-primary);
    }

    &:focus {
      box-shadow: var(--bf-box-shadow-focus-visible) !important;
    }

    &:focus:not(:focus-visible) {
      box-shadow: none !important;
    }

    &:disabled,
    &[readonly] {
      color: var(--bf-color-neutral-tertiary);
      border-color: var(--bf-color-stroke-secondary);
      background-color: var(--bf-color-bg-action-disabled);

      & ~ .form-group__input-icon-container {
        cursor: not-allowed;
        background-color: var(--bf-color-bg-action-disabled);
      }

      // Reversed exception
      @at-root .reversed .form-control:disabled {
        border-color: var(--bf-color-bg-action-disabled);

        & ~ .form-group__input-icon-container {
          background-color: var(--bf-color-bg-action-disabled);
        }
      }
    }
  }

  .form-control {
    color: var(--bf-color-neutral-primary);
    background-color: var(--bf-color-bg-ground);
    border-radius: var(--bf-border-radius-small);
  }
  .form-group__input-icon-container {
  }

  .form-group__input-icon-container {
    top: 1px;
    right: 1px;
    height: calc(100% - 2px);
  }

  .invalid-feedback {
    color: var(--bf-color-feedback-negative);
  }

  .bf-selection-tile--vertical {
    flex-direction: initial;
  }

  input::-webkit-input-placeholder,
  input::placeholder {
    color: var(--bf-color-neutral-tertiary) !important;
  }
}
