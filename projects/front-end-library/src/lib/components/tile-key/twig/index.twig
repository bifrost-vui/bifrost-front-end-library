{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Boolean Variables #}
{% set hasBackgroundImageSrc = backgroundImage.src is defined and backgroundImage.src is not empty %}
{% set hasBackgroundImageTextColor = backgroundImage.textColor is defined and backgroundImage.textColor is not empty %}
{% set hasDescription = description is defined and description is not empty %}
{% set hasHref = href is defined and href is not empty %}
{% set hasIcon = icon is defined and icon is not empty %}
{% set hasLinkLabel = linkLabel is defined and linkLabel is not empty %}
{% set hasTitle = title is defined and title is not empty %}
{% set isBackgroundImageTextColorLight = hasBackgroundImageTextColor and backgroundImage.textColor is same as("light") %}
{% set isClickable = isClickable|default(true) is same as(true) %}
{% set isReversed = reversed|default(false) is same as(true) %}

{# Boolean Variables - ORDER IS IMPORTANT #}
{% set isLink = hasHref and isClickable %}

{# Default Variables (Props, Controls) #}
{% set backgroundColor = backgroundColor|default("underground") %}
{% set class = class|default("") %}
{% set titleTag = titleTag|default("p") %}

{# Variables #}
{% set componentTag = isLink ? "a" : "div" %}

{# Classes Objects #}
{% set backgroundColorClasses = {
  ("ground"): "bf-color-bg-ground",
  ("highlight"): "bf-color-bg-highlight bf-tile-key--highlight highlight",
  ("underground"): "bf-color-bg-underground",
} %}

{# Arrays of Classes With Dynamic Elements #}
{% set tileKeyClasses = [
  "bf-tile-key",
  (isLink ? "bf-tile-key--is-link"),
  (backgroundColorClasses[backgroundColor]),
  (hasBackgroundImageTextColor ? "bf-tile-key--text-color-" ~ backgroundImage.textColor),
  (isBackgroundImageTextColorLight or isReversed ? "reversed"),
  (class),
] %}

{# Objects of Attributes With Dynamic Elements #}
{% set tileKeyAttributes = {
    "href": (isLink ? href),
    "class": tileKeyClasses|join(' ')|trim,
} %}

{# Template #}
{% embed "@bf-utils/custom-tag/twig/index.twig" with {
  customTag: componentTag,
  attr: tileKeyAttributes,
} %}
  {% block customTagContent %}

    {# Background Image #}
    {% if hasBackgroundImageSrc %}
      <div {{ macros.addAttributes({
        "class": "bf-tile-key__visual",
        "style": "background-image: url(" ~ backgroundImage.src ~ ")",
      }) }}></div>
    {% endif %}

    {# Content #}
    <div class="bf-tile-key__inner gap-2 p-4 p-sm-6">
      <div>

        {# Icon #}
        {% if hasIcon %}
          {% if icon is not iterable %}
            {% set icon = {
              name: icon
            } %}
          {% endif %}

          {% set icon =
            icon|merge({
              size: "large"
            })
          %}
          {% include "@bf-components/icon/twig/index.twig" with icon only %}
        {% endif %}

        {# Title #}
        {% if hasTitle %}
          {% embed "@bf-utils/custom-tag/twig/index.twig" with {
            customTag: titleTag,
            attr: {
              "class": "bf-text-interface-large m-0"
            },
          } %}
            {% block customTagContent %}
              {{ title }}
            {% endblock %}
          {% endembed %}
        {% endif %}

        {# Description #}
        {% if hasDescription %}
          <div class="bf-text m-0">
            {{ description|raw }}
          </div>
        {% endif %}
      </div>

      {# Link Label #}
      {# <p> if tile-key is already a link - <a> if tile-key is not a link #}
      {# See "componentTag" variable #}
      <div>
        {% if hasLinkLabel %}
          {% if isLink %}
            <p class="bf-link bf-link--primary mb-0">
              {{ linkLabel }}
            </p>
          {% elseif hasHref %}
            <a {{ macros.addAttributes({
              "href": href,
              "class": "bf-link bf-link--primary",
            }) }}>
              {{ linkLabel }}
            </a>
          {% endif %}
        {% endif %}
      </div>

    </div>
  {% endblock %}
{% endembed %}
