{# Import macros #}
{% import "@bf-utils/macros/twig/index.twig" as macros %}

{# Template #}
<ul class="bf-megamenu" role="menu" aria-label="Main">
  {% for mainMenuItem in mainMenuData %}

    {# In Loop - Boolean Variables #}
    {% set hasColor = mainMenuItem.color is defined and mainMenuItem.color is not empty %}
    {% set hasColorHashtag = hasColor and mainMenuItem.color starts with "#" %}

    {# If color string does not starts with an hashtag (#), then we apply one in front of it #}
    {% set mainMenuItemColor = mainMenuItem.color %}
    {% if hasColorHashtag is same as(false) %}
      {% set mainMenuItemColor = "#" ~ mainMenuItemColor %}
    {% endif %}

    {# In Loop - Arrays of Classes With Dynamic Elements #}
    {% set navItemClasses = [
      "bf-megamenu__nav-item",
      "js-bf-megamenu__nav-item",
      mainMenuItem.class,
    ] %}
    {% set navItemLinkClasses = [
      "bf-megamenu__nav-item__link",
      "bf-megamenu__nav-item__link--a",
      mainMenuItem.class|default("")
    ] %}
    {% set navItemButtonClasses = [
      "bf-megamenu__nav-item__link",
      "bf-megamenu__nav-item__link--button",
      "js-bf-megamenu__nav-link"
    ] %}

    {# Main menu item #}
    <li class="{{ navItemClasses|join(' ')|trim }}" role="presentation">
      {% if not mainMenuItem.subItems and not mainMenuItem.subItemsMultiDropdown %}
        <a {{ macros.addAttributes({
          "class": navItemLinkClasses|join(' ')|trim,
          "href": mainMenuItem.href|default("#"),
          "rel": mainMenuItem.rel|default("dofollow"),
          "style": (hasColor ? "color: " ~ mainMenuItemColor ~ ";"),
          "role": "menuitem",
        }) }}>
          <span class="bf-megamenu__nav-item__link__text">
            {{ mainMenuItem.label }}
          </span>
        </a>
      {% else %}
        <button {{ macros.addAttributes({
          "class": navItemButtonClasses|join(' ')|trim,
          "type": "button",
          "id": "menuDropdown" ~ loop.index,
          "aria-controls": "submenu" ~ loop.index,
          "aria-expanded": "false",
          "aria-haspopup": "true",
          "aria-label": mainMenuItem.label,
          "data-menu-index": "index" ~ loop.index,
          "data-target": "#submenu" ~ loop.index,
          "data-toggle": "collapse",
          "role": "menuitem",
        }) }}>
          <span class="bf-megamenu__nav-item__link__text">
            {{- mainMenuItem.label -}}
          </span>
          {% include "@bf-components/icon/twig/index.twig" with {
            ariaHidden: "true",
            ariaLabel: "Closed Menu Icon"|t,
            class: "bf-megamenu__nav-item__link__icon d-none d-lg-block",
            name: "chevron-down",
            size: "xsmall"
          } %}
        </button>
        {# Container for submenu. To be done in another Jira ticket #}
        {# <ul {{ macros.addAttributes({
          "class": "collapse",
          "id": "submenu" ~ loop.index,
          "aria-labelledby": "menuDropdown" ~ loop.index,
          "role": "menu",
        }) }}>
          <li>asd</li>
        </ul> #}
      {% endif %}
    </li>
  {% endfor %}
</ul>
