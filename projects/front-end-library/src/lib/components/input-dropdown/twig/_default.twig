{% set hasValue = value is defined and value %}
{% set hasOptions = options is defined and options is not empty %}

{% set currentOption = null %}
{% for option in options if option.value == value %}
  {% set currentOption = option %}
{% endfor %}

<div class='dropdown'>
  {% include '@bf-components/button/twig/index.twig' with {
    id: inputId,
    label: currentOption.label|default(placeholder),
    dataToggle: 'dropdown',
    ariaExpanded: false,
    ariaHaspopup: true,
    hierarchy: 'secondary',
    iconName: isReadOnly|default(false) ? '' : 'chevron-down',
    iconPosition: 'right',
    isAutofocus: isAutofocus|default(false),
    isDisabled: (isReadOnly|default(false) or isDisabled|default(false)),
    class: 'bf-input__control dropdown-toggle',
    extraAttribute: inputExtraAttribute|default(NULL)
  } only %}

  {% if options %}
    <ul class='dropdown-menu list-unstyled' aria-labelledby='{{ inputId }}'>
      {% for option in options %}
        {% if option.label is defined and option.label %}
          <li>
            {% set optionButton = option|merge({
              label: option.label,
              hierarchy: 'tertiary',
              fullWidth: true,
              iconPosition: 'left',
              isUnderline: false,
              class: 'dropdown-item ' ~ (currentOption.value == option.value ? 'dropdown-item--current ') ~ option.class,
            }) %}
            {% include '@bf-components/button/twig/index.twig' with optionButton only %}
          </li>
        {% endif %}
      {% endfor %}
    </ul>
  {% endif %}
</div>